[tool.poetry]
name = "agent-guy"
version = "0.0.1"
description = "Agent-based modeling in Python"
authors = ["Laszlo Balo <laszlo.balo@icloud.com>"]
readme = "README.md"
packages = [{ include = "agent_guy" }]

[tool.poetry.dependencies]
python = "<3.13,>=3.10"
numpy = "^1.26.1"
pandas = "^2.1.1"
pydantic = "^2.4.2"
dynaconf = "^3.2.3"
hvplot = "^0.9.0"
panel = "^1.3.0"
matplotlib = "^3.8.0"
xarray = "^2023.10.1"
datashader = "^0.16.0"

[tool.poetry.group.dev.dependencies]
black = "*"
flake8 = "*"
pre-commit = "*"
pytest = "*"
coverage = "*"
mypy = "*"
bandit = "*"
darglint = "*"
mypy-extensions = "*"
pydocstyle = "*"
pylint = "*"
pyupgrade = "*"
typed-ast = "*"
pytest-cov = "*"
pyfakefs = "*"
click = "*"
isort = "*"
taskipy = "*"
jupyterlab = "*"
pyparsing = "*"
jupyter-bokeh = "*"
gprof2dot = "^2022.7.29"
snakeviz = "^2.2.0"

[tool.poetry.group.mkdocs.dependencies]
mkdocs = "*"
livereload = "*"
mkdocs-material = "*"
mkdocs-gen-files = "*"
mkdocs-macros-plugin = "*"
mkdocs-extra-sass-plugin = "*"
mkdocs-table-reader-plugin = "*"
mkdocs-simple-plugin = "*"
mkdocs-multirepo-plugin = "*"
mkdocs-glightbox = "*"
mkdocs-literate-nav = "*"
mkdocs-section-index = "*"
mkdocs-autorefs = "*"
mkdocs-git-revision-date-localized-plugin = "*"
mkdocs-git-authors-plugin = "*"
mkdocstrings-python = "*"
mkdocstrings = "*"
mkdocs-coverage = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
fail_under = 70

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39

extend_skip = ["__init__.py"]

known_typing = [
    "typing",
    "types",
    "typing_extensions",
    "mypy",
    "mypy_extensions",
]
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9

# exclude tests and docs folders
exclude = ["tests", "docs"]


pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = false
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
]
doctest_optionflags = [
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]

# Extra options:
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[tool.coverage.run]
branch = true
source = ["agent_guy"]

[tool.taskipy.tasks]
lint = "task codestyle && task mypy"
mypy = "poetry run mypy --config-file pyproject.toml ./"
codestyle = "task isort && task black"
isort = "poetry run isort --settings-path pyproject.toml ./"
black = "poetry run black --config pyproject.toml ./"

test = "task pytest agent_guy"
pytest = "poetry run pytest -c pyproject.toml --cov-report term  --cov-report xml --cov-report html --cov"
